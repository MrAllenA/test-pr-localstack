name: PR Preview - FastAPI + Localstack

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

permissions:
  contents: write  # needed for sticky PR comment

jobs:
  pr-review:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 3. Install dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Start Docker Compose (Localstack + Postgres)
      - name: Start Docker Compose
        run: |
          docker compose up -d
          sleep 20  # wait for services

      # 5. Start FastAPI with logging
      - name: Start FastAPI
        run: |
          echo "ðŸš€ Starting FastAPI..."
          nohup uvicorn main:app --host 0.0.0.0 --port 8000 > fastapi.log 2>&1 &
          sleep 10
          tail -n 20 fastapi.log

      # 6. Install ngrok v3
      - name: Install ngrok v3
        run: |
          curl -sSL https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip -o ngrok.zip
          unzip ngrok.zip
          sudo mv ngrok /usr/local/bin/
          ngrok version

      # 7. Start ngrok tunnel
      - name: Start ngrok tunnel
        id: ngrok
        run: |
          ngrok http 8000 --authtoken=${{ secrets.NGROK_AUTH_TOKEN }} --log=stdout > ngrok.log &
          sleep 10
          NGROK_URL=$(curl -s localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          echo "NGROK_URL=$NGROK_URL" >> $GITHUB_ENV
          echo "Tunnel URL: $NGROK_URL"

      # 8. Comment PR with ngrok URL
      - name: Comment PR with preview URL
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            ðŸš€ PR Preview is live: ${{ env.NGROK_URL }}

  pr-teardown:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Tear down Docker Compose
        run: |
          echo "ðŸ›‘ PR closed. Shutting down Docker Compose..."
          docker compose down
